from telebot import types
import random
from functions.font_data import questions_data, font_types_message_data, font_photos_data

# –ü–µ—Ä–µ–º–µ–Ω—ã–µ
global question_item, count, font_types, questions
# –í count —Ö—Ä–∞–Ω—è—Ç—Å—è –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
count = list()
font_types = ["square", "round", "inclined", "handwritten", "stylized"]
# font types for adding in message
font_types_message = list()
font_photos = list()
questions = list()
past_quest = list()

# –ü–æ–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–∫–∏
for i in questions_data:
    questions.append(i)
for i in font_types_message_data:
    font_types_message.append(i)
for i in font_photos_data:
    font_photos.append(i)

def font(callback_query, bot, welcome_keyboard):
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    btn_yes = types.InlineKeyboardButton("–î–∞", callback_data="font_yes")
    btn_no = types.InlineKeyboardButton("–ù–µ—Ç", callback_data="font_no")
    keyboard.add(btn_yes, btn_no)

    # bot.register_next_step_handler(callback_query)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    bot.send_message(callback_query.from_user.id, "–ù–∞—á–Ω—ë–º –≤—ã–±–æ—Ä –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è —Ç–≤–æ–µ–≥–æ –±—Ä—ç–Ω–¥–∞!\n\n –í—ã –æ—Ç–≤–µ—á–∞–µ—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∞ —è –ø–æ–¥–±–∏—Ä–∞—é —à—Ä–∏—Ñ—Ç. –ü–æ–≥–Ω–∞–ª–∏!")
    # –ó–∞–¥–∞—ë–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
    bot.send_message(callback_query.from_user.id, questions[0][0], reply_markup=keyboard)
    # –î–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö
    past_quest.append(0)

    # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –î–ê
    @bot.callback_query_handler(func=lambda c: c.data == "font_yes")
    def yes_handler(callback_query: types.CallbackQuery):
        # –î–æ–±–∞–≤–ª—è–µ–º –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ —Å –ø—Ä–æ—à–ª–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
        count.append(questions[past_quest[-1]][1])
        # –£–¥–∞—è–ª—è–µ–º –ø—Ä–æ—à–ª—ã–π –≤–æ–ø—Ä–æ—Å –∏–∑ –º–∞—Å—Å–∏–≤–∞
        questions.pop(past_quest[-1])
        # Try/exept –Ω—É–∂–Ω–æ –¥–ª—è —Å–ª—É—á–∞—è –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å
        try:
            quest_index = questionAsk()
        except Exception:
            final()
            # –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç –≤ –º–∞—Å—Å–∏–≤–µ, –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É
            return

        bot.send_message(callback_query.from_user.id, questions[quest_index][0], reply_markup=keyboard)

    # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ù–ï–¢
    @bot.callback_query_handler(func=lambda c: c.data == "font_no")
    def no_handler(callback_query: types.CallbackQuery):
        # –£–¥–∞—è–ª—è–µ–º –ø—Ä–æ—à–ª—ã–π –≤–æ–ø—Ä–æ—Å –∏–∑ –º–∞—Å—Å–∏–≤–∞
        questions.pop(past_quest[-1])
        # Try/exept –Ω—É–∂–Ω–æ –¥–ª—è —Å–ª—É—á–∞—è –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å. –í—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
        try:
            quest_index = questionAsk()
        except Exception:
            final()
            return

        # –ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(callback_query.from_user.id, questions[quest_index][0], reply_markup=keyboard)

    # –í—ã–±–æ—Ä –≤–æ–ø—Ä–æ—Å–∞
    def questionAsk():
        # –ó–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É—Å–ª–æ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –≤ –º–∞—Å—Å–∏–≤–µ —Ç–æ –∏—Ö –∑–∞–¥–∞–≤–∞—Ç—å, 
        if len(questions) > 0:
            quest_index = random.randint(0, len(questions)-1)
            # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å –≤ –º–∞—Å—Å–∏–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–Ω–Ω—ã–º–∏
            past_quest.append(quest_index)
        # –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –∑–∞–≤–µ—Ä—à–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É
        else:
            raise Exception("The end of the function")

        return quest_index

    # –§–∏–Ω–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    def final():
        counter = [0]*len(font_types)

        for i in range(0, len(count)):
            for j in range(0, len(font_types)):
                if count[i] == font_types[j]:
                    counter[j]+=1

        # –î–æ—Å—Ç–∞—ë–º –∏–Ω–¥–µ–∫—Å —ç—Ç–æ–≥–æ —Ü–≤–µ—Ç–∞ (–∏–Ω–¥–µ–∫—Å —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å font_types)
        win_index = counter.index(max(counter))
        # –§–æ—Ç–æ
        photo = open(font_photos[win_index], 'rb')
        # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        final_str = f"–ù–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à—Ä–∏—Ñ—Ç –¥–ª—è –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞ –∏–ª–∏ –ª–æ–≥–æ—Ç–∏–ø–∞ - <b>{font_types_message[win_index][0]}\n\n–ü—Ä–∏–º–µ—Ä—ã —à—Ä–∏—Ñ—Ç–æ–≤: </b>{font_types_message[win_index][1]}\n\n –Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é —Ç–∞–∫–∂–µ: üëá"
        # –§–æ—Ç–æ
        bot.send_photo(callback_query.from_user.id, photo)
        # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(callback_query.from_user.id, final_str, reply_markup=welcome_keyboard, parse_mode="html")
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –∏–≥—Ä
        for i in questions_data:
            questions.append(i)
        count.clear()