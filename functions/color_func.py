from telebot import types
import random
from functions.color_data import assoc_data, questions_data

global color_arr, assoc, questions, count, past_quest
color_arr = ["–∫—Ä–∞—Å–Ω—ã–πüî¥", "–∂—ë–ª—Ç—ã–πüü°", "—Å–∏–Ω–∏–πüîµ", "–∑–µ–ª—ë–Ω—ã–πüü¢", "—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–πüü£", "–æ—Ä–∞–Ω–∂–µ–≤—ã–πüü†"]

assoc = assoc_data
questions = list()
for i in questions_data:
    questions.append(i)

# –°–æ–±–∏—Ä–∞–µ—Ç –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ —Å –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –î–ê
count = list()
# –ú–∞—Å—Å–∏–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏
past_quest = list()

def color(callback_query, bot, welcome_keyboard):
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    btn_yes = types.InlineKeyboardButton("–î–∞", callback_data="color_yes")
    btn_no = types.InlineKeyboardButton("–ù–µ—Ç", callback_data="color_no")
    keyboard.add(btn_yes, btn_no)
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    bot.send_message(callback_query.from_user.id, "–ù–∞—á–Ω—ë–º –≤—ã–±–æ—Ä —Ü–≤–µ—Ç–æ–≤! –í—ã –æ—Ç–≤–µ—á–∞–µ—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∞ —è –ø–æ–¥–±–∏—Ä–∞—é —Ü–≤–µ—Ç. –ü–æ–≥–Ω–∞–ª–∏!")
    # –ó–∞–¥–∞—ë–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
    bot.send_message(callback_query.from_user.id, questions[0][0], reply_markup=keyboard)
    # –î–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö
    past_quest.append(0)

    # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –î–ê
    @bot.callback_query_handler(func=lambda c: c.data == "color_yes")
    def yes_handler(callback_query: types.CallbackQuery):
        # –î–æ–±–∞–≤–ª—è–µ–º –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ —Å –ø—Ä–æ—à–ª–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∏–ª –î–ê
        count.extend(questions[past_quest[-1]][1])
        # –£–¥–∞—è–ª—è–µ–º –ø—Ä–æ—à–ª—ã–π –≤–æ–ø—Ä–æ—Å –∏–∑ –º–∞—Å—Å–∏–≤–∞
        questions.pop(past_quest[-1])
        # Try/exept –Ω—É–∂–Ω–æ –¥–ª—è —Å–ª—É—á–∞—è –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å. –í—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
        try:
            quest_index = questionAsk()
        except Exception:
            final()
            # –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç –≤ –º–∞—Å—Å–∏–≤–µ, –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É
            return

        bot.send_message(callback_query.from_user.id, questions[quest_index][0], reply_markup=keyboard)

    # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ù–ï–¢
    @bot.callback_query_handler(func=lambda c: c.data == "color_no")
    def no_handler(callback_query: types.CallbackQuery):
        # –£–¥–∞—è–ª—è–µ–º –ø—Ä–æ—à–ª—ã–π –≤–æ–ø—Ä–æ—Å –∏–∑ –º–∞—Å—Å–∏–≤–∞
        questions.pop(past_quest[-1])
        # Try/exept –Ω—É–∂–Ω–æ –¥–ª—è —Å–ª—É—á–∞—è –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å. –í—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
        try:
            quest_index = questionAsk()
        except Exception:
            final()
            return

        # –ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(callback_query.from_user.id, questions[quest_index][0], reply_markup=keyboard)

    # –í—ã–±–æ—Ä –≤–æ–ø—Ä–æ—Å–∞
    def questionAsk():
        # –ó–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É—Å–ª–æ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –≤ –º–∞—Å—Å–∏–≤–µ —Ç–æ –∏—Ö –∑–∞–¥–∞–≤–∞—Ç—å, 
        if len(questions) > 0:
            quest_index = random.randint(0, len(questions)-1)
            past_quest.append(quest_index) # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å –≤ –º–∞—Å—Å–∏–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–Ω–Ω—ã–º–∏
        # –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
        else:
            raise Exception("The end of the function")

        return quest_index

    # –§–∏–Ω–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    def final():
        counter = [0]*len(color_arr)

        # –ü—Ä–æ–±–µ–≥–∞–µ–º—Å—è –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º assoc –∏ –Ω–∞—Ö–æ–¥–∏–º —Ü–≤–µ—Ç —É –∫–æ—Ç–æ—Ä–æ–≥–æ –±–æ–ª—å—à–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Å count –ø–æ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—è–º
        for i in range(0, len(assoc)):
            for j in range(0, len(assoc[i])):
                for k in range(0, len(count)):
                    if count[k] == assoc[i][j]:
                       counter[i]+=1

        # –î–æ—Å—Ç–∞—ë–º –∏–Ω–¥–µ–∫—Å —ç—Ç–æ–≥–æ —Ü–≤–µ—Ç–∞ (–∏–Ω–¥–µ–∫—Å —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å color_arr)
        win_color_index = counter.index(max(counter))
        # Final str
        final_str = f"–ù–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ü–≤–µ—Ç –¥–ª—è –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞ - <b>{color_arr[win_color_index]}</b>.\n\n –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ –ø—Ä–∞–≤–∏–ª–µ 10:30:60. –≠—Ç–æ—Ç —Ü–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–Ω–∏–º–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 30% –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞!\n\n –Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é —Ç–∞–∫–∂–µ: üëá"
        # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(callback_query.from_user.id, final_str, reply_markup=welcome_keyboard, parse_mode="html")
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –∏–≥—Ä
        for i in questions_data:
            questions.append(i)
        count.clear()
        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Ñ—É–Ω–∫—Ü–∏–∏
        return

# –ù—É–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–ª–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ color –≤ –∫–æ–Ω—Ü–µ
# –ù—É–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–ª–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ color –≤ –∫–æ–Ω—Ü–µ
# –ù—É–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–ª–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ color –≤ –∫–æ–Ω—Ü–µ
# –ù—É–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–ª–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ color –≤ –∫–æ–Ω—Ü–µ
# –ù—É–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–ª–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ color –≤ –∫–æ–Ω—Ü–µ